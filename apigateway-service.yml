eureka:
  instance:
    prefer-ip-address: true


spring:
  cloud:
    gateway:
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/join
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/check/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: test-service
          uri: lb://TEST-SERVICE
          predicates:
            - Path=/test-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/test-service/(?<segment>.*), /$\{segment}
        - id: test-service
          uri: lb://TEST-SERVICE
          predicates:
            - Path=/test-service/actuator/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/test-service/(?<segment>.*), /$\{segment}
        - id: test-service
          uri: lb://TEST-SERVICE
          predicates:
            - Path=/test-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/test-service/(?<segment>.*), /$\{segment}
#            - AuthorizationHeaderFilter
        - id: place-service
          uri: lb://PLACE-SERVICE
          predicates:
            - Path=/place-service/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/place-service/(?<segment>.*), /$\{segment}
        - id: review-service
          uri: lb://REVIEW-SERVICE
          predicates:
            - Path=/review-service/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/review-service/(?<segment>.*), /$\{segment}
        - id: triporder-service
          uri: lb://TRIPORDER-SERVICE
          predicates:
            - Path=/triporder-service/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/triporder-service/(?<segment>.*), /$\{segment}
        - id: tripplan-service
          uri: lb://TRIPPLAN-SERVICE
          predicates:
            - Path=/tripplan-service/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/tripplan-service/(?<segment>.*), /$\{segment}
        - id: triproute-service
          uri: lb://TRIPROUTE-SERVICE
          predicates:
            - Path=/triproute-service/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/triproute-service/(?<segment>.*), /$\{segment}
        - id: tag-service
          uri: lb://TAG-SERVICE
          predicates:
            - Path=/tag-service/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/tag-service/(?<segment>.*), /$\{segment}
        - id: share-service
          uri: lb://SHARE-SERVICE
          predicates:
            - Path=/share-service/**
            - Method=GET,POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/share-service/(?<segment>.*), /$\{segment}
